import React from 'react';
import styles from './styles.scss';

function Home() {
  return (
    <section>
      <p className={styles.paragraph}>
        Welcome to the <strong>Universal React Starter-kyt</strong>. This starter kyt should serve
        as the base for an advanced, server-rendered React app.
      </p>
      <p className={styles.paragraph}>
        Check out the Tools section for an outline of the libraries that are used in this
        Starter-kyt.
      </p>
    </section>
  );
}

export default Home;


  onUpdateInput(inputValue) {
    const self = this;
    this.setState({
      inputValue: inputValue
    }, function() {
      self.performSearch();
    });
  }








import React from 'react';

const Lists = (props) =>{
    
//    const mapval = props.map((props)=>{
//       return <li>{props}</li>
//    });
    console.log('List props: ',props)
    return(
        <ul>
            {props}
        </ul>
    );
}
export default  Lists;

//{props.state.dataSource[0].page}
 // page is : {props.dataSource[0].page}
//working









import React, {Component} from 'react';
import booksApi from '../App/books.js';
import Lists from '../Lists'
import styles from './styles.scss';

class Home extends Component {
  constructor(props) {
    super(props);
    this.state = {
      dataSource : [''],
      inputValue : ''
    }
      this.GoodReads = this.GoodReads.bind(this);
      //this.mapStateToProps = this.mapStateToProps.bind(this);
      this.handleClick = this.handleClick.bind(this);
      
      this.GoodReads();
  }
    
//componentWillMount()
//{
//    
//}
  componentWillReceiveProps(nextProps) {
    if (nextProps.searchResults !== this.props.searchResults) {
      const { query, items, totalResults } = nextProps.searchResults;
      const dataSource = nextProps.books;
      this.setState({ query });
      if (items.length > 0) {
        const bookData = items.filter((i, index) => index < 5).map(book => ({
          name: books[book].title,
          code: book,
          author: books[book].author,
          image: books[book].image,
        }));
        if (items.length > 5) {
          bookData.push({
            name: `${parseInt(totalResults, 10) - 5} Other Results`,
            code: 'search',
            author: query,
            image: '',
          });
        }
        this.setState({ dataSource: bookData });
      }
    }
  }
handleClick()
{
    console.log('handler called')
}

GoodReads() {
    var search = "The Hobbit";
    let result = [];
    booksApi.getAllBooks({query: search, page: '1'}).then((books) => {
        console.log('Result: ',books) //status 400

        result = books;
        this.setState({dataSource: result})
    })
    debugger;
    console.log(result);

}
//componentDidMount()
//    {
//        console.log('datasrc after' , this.state.dataSource);
//    }

render() {
    let ww = [];
    if(this.state.dataSource.length>0){
        if(this.state.dataSource[0].results)
            {
                ww = this.state.dataSource[0].results[0].work;
            }
    }
    console.log('tis is ww ', ww);
    //console.log('try :  ', this.state.dataSource[0].results[0].work[0].best_book[0].title)
    const config = { };
    return (
      <section>
        <input />
        <button className={styles.button} label="Find Book" onClick={this.handleClick} />
        <Lists props= {this.state.dataSource ? this.state.dataSource[0].query : 'No data available'}/>
        <div>   
        </div>
      </section>
    );
  
}
}
export default Home;
  /*<Lists props = {this.state.dataSource}/>
  
  
   query is {this.state.dataSource[0].query}
  
   {this.state.dataSource ? this.state.dataSource[0].query : 'No data available'}
   
   <Lists dp= {this.state.dataSource ? this.state.dataSource[0].query : 'No data available'}/>
   working <Lists dp= {this.state.dataSource[0].page}/>
  */